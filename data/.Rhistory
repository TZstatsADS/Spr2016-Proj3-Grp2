summarise(data3,mean = mean(score),sd = sd(score))
data3 = case0601 %>%
filter(Handicap!="None") %>%
group_by(Handicap)
summarise(data3,mean = mean(score),sd = sd(score))
data3 = case0601 %>%
filter(Handicap!="None") %>%
group_by(Handicap) %>%
summary(mean = mean(Score),sd = sd(Score))
data3
data3 = case0601 %>%
filter(Handicap!="None") %>%
group_by(Handicap) %>%
summarise(mean = mean(Score),sd = sd(Score))
data3
data3 = case0601 %>%
filter(Handicap!="None") %>%
group_by(Handicap) %>%
summarise(mean = mean(Score),sd = sd(Score),n=n())
data3
class(data3)
mean = data3$mean
sd = data3$sd
coef = c(-1/3,-1/3,1,-1/3)
g = sum(coef*mean)
g
mean = data3$mean
sd = data3$sd
coef = c(1/3,1/3,-1,1/3)
g = sum(coef*mean)
pooled = sqrt(sum(sd^2*(n-1)))
attach(data3)
coef = c(1/3,1/3,-1,1/3)
g = sum(coef*mean)
pooled = sqrt(sum(sd^2*(n-1)))
rm(list = ls())
library("Sleuth3")
attach(case0601)
library("dplyr")
data3 = case0601 %>%
filter(Handicap!="None") %>%
group_by(Handicap) %>%
summarise(mean = mean(Score),sd = sd(Score),n=n())
attach(data3)
coef = c(1/3,1/3,-1,1/3)
g = sum(coef*mean)
pooled = sqrt(sum(sd^2*(n-1)))
SE = pooled*sqrt(sum(mean^2/n))
SE
SE = pooled*sqrt(sum(coef^2/n))
SE
pooled
pooled = sqrt(sum(sd^2*(n-1))/sum(n-1))
SE = pooled*sqrt(sum(coef^2/n))
SE
tStatistic = g/SE
tStatistic
nrow(case0601)
nrow(data3)
data3 = case0601 %>%
filter(Handicap!="None")
nrow(data3)
56-4
qt(tStatistic,52)
pt(tStatistic,52)
pValue = 1-pt(tStatistic,52)
qt(0.975,65)*sqrt(2)
qtukey(0.975,52)
n
qtukey(0.975,14,52)
?qtukey
qtukey(0.975,4,52)
qtukey(0.975,5,65)
qtukey(0.95,5,65)
qtukey(0.975,5,65)/sqrt(2)
qtukey(0.95,5,65)/sqrt(2)
## Planned comparison
pValue = 1-pt(tStatistic,52)
## Unplanned comparison
qTukey = qtukey(0.95,4,52)
qTukey = qtukey(0.95,4,52)/sqrt(2)
qTukey
tStatistic
3/1.3645
g
mean = c(30.20,28.80,26.20,31.10,30.20)
sd = c(3.82,5.26,4.66,4.91,3.53)
n = rep(9,5)
pooled = sqrt(sum((n-1)*sd^2)/sum(n-1))
coeff = c(1/3, -1/2, -1/2, 1/3, 1/3)
g = sum(coeff * mean)
sdG = pooled*sqrt(sum(coeff^2/n))
tStatistic = g/sdG
g
q = qt(0.975,40)
CI = c(tStatistic-sdG*q, tStatistic+sdG*q)
CI
coeff = c(1/3, -1/2, -1/2, 1/3, 1/3)
g = sum(coeff * mean)
sdG = pooled*sqrt(sum(coeff^2/n))
tStatistic = g/sdG
q = qt(0.975,40)
CI = c(g-sdG*q, g+sdG*q)
CI
Sleuth3Manual()
Sleuth3Manual()
attach(ex1420)
str(ex1420)
installed.packages("agricolae")
TukeyHSD
attach(ex1420)
TukeyHSD(aov(wtLoss24~Diet, dataPairwiseComparisons))
attach(ex1420)
TukeyHSD(aov(wtLoss24~Diet, ex1420))
str(ex1420)
attach(ex1420)
TukeyHSD(aov(WtLoss24~Diet, ex1420))
LSD = qt(0.975,30)
LSD
tukey = qtukey(0.95,6,30)
tukey
tukey = qtukey(0.95,6,30)/sqrt(2)
tukey
bonferroni = qt(1-0.05/10,30)
bonferroni
bonferroni = qt(1-0.05/12,30)
bonferroni
bonferroni = qt(1-0.05/30,30)
bonferroni
sheffe = sqrt(5*qf(0.95,5,30))
sheffe
install.packages("EBImage")
source("http://bioconductor.org/biocLite.R")
biocLite()
setwd("./proj3_sample")
library("jpeg")
?readJPEG
readJPEG()
??readJPEG
readJPEG
library("Sleuth3")
attach(case0702)
fit1 = lm(pH ~ Time, case0702)
predict(fit1, data.frame(Time = 5), interval = "predict", se.fit = TRUE)
predict(fit1, data.frame(Time = 5), interval = "confidence", se.fit = TRUE)
?predict.lm
5.953049+1.96*0.0875
6.0175-5.953049
0.064451/1.96
predict(fit1, data.frame(Time = 5), interval = "prediction")
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
predict1
attach(case0702)
str(case0702)
se.pred = (predict1$lwr - predict1$fit) / t(0.975,n-2)
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
se.pred = (predict1$lwr - predict1$fit) / t(0.975,n-2)
names(predict1)
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
predict1
class(predict1)
se.pred = (predict1[,'upr'] - predict1[,'fit']) / t(0.975,n-2)
se.pred = (predict1[,'upr'] - predict1[,'fit']) / qt(0.975,n-2)
se.pred
predict1[,'upr']
predict1[,'fit']
qt(0.975,n-2)
qt(0.975,5)
n
nrow(case0702)
n = nrow(case0702)
predict1 = predict(fit1, data.frame(Time = 5), interval = "prediction")
se.pred = (predict1[,'upr'] - predict1[,'fit']) / qt(0.975,n-2)
se.pred
se.pred/2
detach(case0702)
attach(ex0724)
str(ex0724)
attach(ex0724)
str(ex0724)
ex0724$Canada
lm(Denmark ~ Year, ex0724)
fitDenmark = lm(Denmark ~ Year, ex0724)
fitDenmark$residuals
summary(fitDenmark)
str(ex0724)
fitUSA = lm(USA ~ Year, ex0724)
fitDenmark = lm(Denmark ~ Year, ex0724)
fitNetherlands = lm(Netherlands ~ Year, ex0724)
fitCanada = lm(Canada ~ Year, ex0724)
fitUSA = lm(USA ~ Year, ex0724)
summary(fitDenmark)
library("Sleuth3")
attach(ex0724)
fitDenmark = lm(Denmark ~ Year, ex0724)
fitNetherlands = lm(Netherlands ~ Year, ex0724)
fitCanada = lm(Canada ~ Year, ex0724)
fitUSA = lm(USA ~ Year, ex0724)
summary(fitDenmark)
play = summary(fitDenmark)
play$coefficients
dim(play$coefficients)
play$coefficients[2,3:4]
table7 = table(denmark,netherlands,canada,usa)
denmark = summary(fitDenmark)$coefficients[2,3:4]
netherlands = summary(fitNetherlands)$coefficients[2,3:4]
canada = summary(fitCanada)$coefficients[2,3:4]
usa = summary(fitUSA)$coefficients[2,3:4]
table7 = table(denmark,netherlands,canada,usa)
table7
table7 = cbind(denmark,netherlands,canada,usa)
table
table7
table7 = table(cbind(denmark,netherlands,canada,usa))
table7
table7 = cbind(denmark,netherlands,canada,usa)
table7
library(Sleuth3)
attach(ex0914)
str(ex0914)
pairs(ex0914)
fit = lm(Heart ~ Bank + Walk + Talk, ex0914)
fit
fit$residuals
plot(fit$fitted.values,fit$residuals)
summary(fit)
install.packages(lattice)
install.packages("lattice")
library(lattice)
detach(ex0914)
attach(ex0915)
?splom
str(splom)
str(ex0915)
detach(ex0915)
attach(ex0916)
Sleuth3Manual()
attach(ex0327)
str(ex0327)
?plot
library(car)
scatterplot(PollenRemoved ~ DurationOfVisit | BeeType, ex0327)
?scatterplot
scatterplot(PollenRemoved ~ DurationOfVisit | BeeType, ex0327, smoother = FALSE, reg.line = FALSE)
?logit
scatterplot(logit(PollenRemoved) ~ DurationOfVisit | BeeType, ex0327, smoother = FALSE, reg.line = FALSE)
scatterplot(logit(PollenRemoved) ~ log(DurationOfVisit) | BeeType, ex0327, smoother = FALSE, reg.line = FALSE)
fit2 = lm(logit(PollenRemoved) ~ log(DurationOfVisit) + BeeType + DurationOfVisit*BeeType)
summary(fit2)
fit2e = lm(logit(PollenRemoved) ~ log(DurationOfVisit) + BeeType)
summary(fit2e)
detach(ex0327)
attach(ex0918)
str(ex0918)
scatterplot(Females ~ Latitude, ex0918, smoother = FALSE, reg.line = FALSE)
scatterplot(Females ~ Latitude | Continent, ex0918, smoother = FALSE, reg.line = FALSE)
scatterplot(Females + Males ~ Latitude | Continent, ex0918, smoother = FALSE, reg.line = FALSE)
library(dplyr)
?mutate
data3 = ex0918 %>%
select(Continent, Latitude, Females, Males) %>%
transmutate(Continent = c(Continent, Continent), Latitude = c(Latitude, Latitude), Wings = c(Females, Males), Sex = rep(c(0,1),each = nrow(ex0918)))
data3 = ex0918 %>%
select(Continent, Latitude, Females, Males) %>%
transmute(Continent = c(Continent, Continent), Latitude = c(Latitude, Latitude), Wings = c(Females, Males), Sex = rep(c(0,1),each = nrow(ex0918)))
data3 = rbind(ex0918[,c("Continent","Latitude","Females")],ex0918[,c("Continent","Latitude","Males")])
wings = c(ex0918[,"Females"],ex0918[,"Males"])
wings
data3 = cbind(c(Continent, Continent), c(Latitude, Latitude), Wings, rep(c(0,1),each = length(Continent)))
Wings = c(Females, Males)
data3 = cbind(c(Continent, Continent), c(Latitude, Latitude), Wings, rep(c(0,1),each = length(Continent)))
data3 = data.frame(Continent = c(Continent, Continent), Latitude = c(Latitude, Latitude), Wings = Wings, Sex = as.factors(rep(c(0,1),each = length(Continent))))
data3 = data.frame(Continent = c(Continent, Continent), Latitude = c(Latitude, Latitude), Wings = Wings, Sex = as.factor(rep(c(0,1),each = length(Continent))))
str(data3)
scatterplot(Wings ~ Latitude | Continent + Sex, data3, smoother = FALSE, reg.line = FALSE)
Continent
library("ggplot")
library("ggplot2")
?ggplot
?aes
ggplot(data3, aes(x = Latitude, y = Wings, colour = Continent, linetype = Sex))
ggplot(data3, aes(x = Latitude, y = Wings, colour = Continent, linetype = Sex)) + geom_point()
ggplot(data3, aes(x = Latitude, y = Wings, colour = Continent, shape = Sex)) + geom_point()
?aes
ggplot(data3, aes(x = Latitude, y = Wings, colour = factor(Continent), shape = Sex)) + geom_point(aes(size = 3))
str(ex0918)
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
attach(ex0918)
library("ggplot2")
Wings = c(Females, Males)
data3 = data.frame(Continent = c(Continent, Continent), Latitude = c(Latitude, Latitude), Wings = Wings, Sex = as.factor(rep(c(0,1),each = length(Continent))))
ggplot(data3, aes(x = Latitude, y = Wings, colour = factor(Continent), shape = Sex)) + geom_point(aes(size = 3))
str(data3)
attach(ex0918)
library("ggplot2")
Wings = c(Females, Males)
data3 = data.frame(Continent = as.factor(c(Continent, Continent)), Latitude = c(Latitude, Latitude), Wings = Wings, Sex = as.factor(rep(c(0,1),each = length(Continent))))
ggplot(data3, aes(x = Latitude, y = Wings, colour = Continent, shape = Sex)) + geom_point(aes(size = 3))
fit3 = lm(Wings ~ Latitude + Continent + Sex + Continent*Sex)
str(data3)
fit3 = lm(Wings ~ Latitude + Continent + Sex + Continent*Sex, data3)
fit3
Sleuth3Manual()
detach(ex0918)
attach(ex0920)
str(ex0920)
plot(Year, Time)
fit41 = lm(Time~Year)
fit42 = lm(Time~Year + I(Year^2))
line(fit41)
abline(fit41)
abline(fit42)
lines(fit41)
lines(predict(fit42))
abline(fit41)
fit42
fit41
lines(Year,predict(fit42))
plot(Year, Time)
fit41 = lm(Time~Year)
fit42 = lm(Time~Year + I(Year^2))
abline(fit41)
lines(Year,predict(fit42))
str(ex0920)
plot(Year, Speed)
fit43 = lm(Speed~Year)
fit44 = lm(Speed~Year + I(Year^2))
abline(fit43)
lines(Year,predict(fit44))
Track
data4 = ex0920 %>%
filter(Track = "Fast" | Track = "Slow")
data4 = ex0920 %>%
filter(Track == "Fast" | Track == "Slow")
detach(ex0920)
data4 = ex0920 %>%
filter(Track == "Fast" | Track == "Slow")
data4 = ex0920 %>%
filter(Track == "Fast" | Track == "Slow")
fit4b = lm(Speed~Year + I(Year^2) + Track, data4)
fit4b
summary(fit4b)
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
attach(ex0920)
fit4b = lm(Speed~Year + I(Year^2) + Conditons)
str(ex0920)
fit4b = lm(Speed~Year + I(Year^2) + Conditions)
fit4b
fit4c = lm(Speed~Year + I(Year^2) + Conditons + Starters + Starters * Conditions)
fit4c2 = lm(Speed~Year + I(Year^2) + Conditions + Starters)
fit4c2 = lm(Speed~Year + I(Year^2) + Conditions + Starters + Starters * Conditions)
summary(fit4c1)
fit4c1 = lm(Speed~Year + I(Year^2) + Conditions + Starters)
summary(fit4c1)
fit4c2 = lm(Speed~Year + I(Year^2) + Conditions + Starters + Starters * Conditions)
summary(fit4c2)
fit4c3 = lm(Speed~Year + I(Year^2) + Conditions + Starters * Conditions)
summary(fit4c3)
fit4c2 = lm(Speed~Year + I(Year^2) + Conditions + Starters + Starters * Conditions)
summary(fit4c2)
fit4c1 = lm(Speed~Year + I(Year^2) + Conditions + Starters)
summary(fit4c1)
detach(ex0920)
Sleuth3Manual()
attach(case0901)
str(case0901)
data5 = case0901 %>%
mutate(TimeI = as.factor(Time == 24))
data(case0901)
data5 = case0901 %>%
mutate(TimeI = as.factor(Time == 24))
fit5 = lm(Flowers ~ Intensity + TimeI, data5)
data5
data(case0901)
fit5 = lm(Flowers ~ Intensity + TimeI, case0901)
data(case0901)
fit5 = lm(Flowers ~ Intensity + Time, case0901)
anova(fit5)
fit5b = lm(Flowers ~ as.factor(Intensity) + Time + as.factor(Intensity)*Time, case0901)
anova(fit5b)
f.test(fit5a,fit5b)
anova(fit5a,fit5b)
fit5a = lm(Flowers ~ Intensity + Time, case0901)
anova(fit5a,fit5b)
fit5b = lm(Flowers ~ as.factor(Intensity) + Time + I(as.factor(Intensity)*Time), case0901)
anova(fit5b)
fit5b = lm(Flowers ~ as.factor(Intensity) + Time + as.factor(Intensity)*Time, case0901)
anova(fit5b)
anova(fit5a,fit5b)
anova(fit5b,fit5a)
attach(ex0914)
fit = lm(Heart ~ Bank + Walk + Talk, ex0914)
fit
summary(fit)
Sleuth3Manual()
attach(ex1028)
str(ex1028)
plot(Storms, ElNino)
attach(ex1028)
plot(Storms, ElNino)
fit6a = lm(ElNino~Storms)
abline(fit6a)
scatterplot(ElNino~Storms,ex1028, smoother = FALSE)
toNumeric = function(f){as.numeric(levels(f))[f]}
data6 = ex1028 %>%
mutate(El = toNumeric(ElNino))
data6 = ex1028 %>%
mutate(El = apply(ElNino, toNumeric))
?apply
toNumeric = function(f){as.numeric(levels(f))[f]}
data6 = ex1028 %>%
mutate(El = apply(ElNino, 1, toNumeric))
toNumeric = function(f){as.numeric(levels(f))[f]}
data6 = ex1028 %>%
mutate(El = lapply(ElNino, toNumeric))
warnings()
ElNino
scatterplot(Storms~ElNino, ex1028, smoother = FALSE)
str(ex1028)
scatterplot(Hurricanes~ElNino, ex1028, smoother = FALSE)
scatterplot(StormIndex ~ ElNino + WestAfrica + Year, ex1028, smoother = FALSE)
scatterplot(StormIndex ~ WestAfrica + ElNino + Year, ex1028, smoother = FALSE)
anova(StormIndex ~ WestAfrica + Elnino + Year)
anova(lm(StormIndex ~ WestAfrica + Elnino + Year))
anova(lm(StormIndex ~ WestAfrica + ElNino + Year))
anova(lm(StormIndex ~ WestAfrica + ElNino + Year))
scatterplot(StormIndex ~ WestAfrica + ElNino, ex1028, smoother = FALSE)
setwd("~/Data Science/Project3/cycle3cvd-team2/data")
lib = c("EBImage", "XML","dplyr")
lapply(lib, library, character.only = TRUE)
dir_XML = "../../annotations/xmls"
dir_ann = list.files(dir_XML)
dir_names = lapply(dir_ann, gsub, pattern = ".xml", replacement = "")
faces = lapply(dir_names,getFace,xmlDir = "../../annotations/xmls",picDir = "../../images")
save(faces, file = "faces.RData")
getFace = function(name,xmlDir,picDir){
print(name)
xml = paste(paste(xmlDir,name,sep = "/"), "xml", sep = ".")
pic = paste(paste(picDir,name,sep = "/"), "jpg", sep = ".")
ann <- xmlParse(xml)
head_box <- xmlToDataFrame(ann, nodes=getNodeSet(ann,"//annotation/object/bndbox"))
head_box = head_box %>%
lapply(toNumeric) %>%
unlist()
img = pic %>%
readImage() %>%
channel(mode = 'gray') %>%
imageData()
#print(dim(img))
#print(head_box)
head = img[head_box[1]:head_box[3], head_box[2]:head_box[4]]
}
toNumeric = function(f){as.numeric(levels(f))[f]}
lib = c("EBImage", "XML","dplyr")
lapply(lib, library, character.only = TRUE)
dir_XML = "../../annotations/xmls"
dir_ann = list.files(dir_XML)
dir_names = lapply(dir_ann, gsub, pattern = ".xml", replacement = "")
dir_names = head(dir_names)
faces = lapply(dir_names,getFace,xmlDir = "../../annotations/xmls",picDir = "../../images")
save(faces, file = "faces.RData")
display(faces[[1]])
dim(faces[[1]])
?mapply
?t.test
?lapply
picDir = "../../images"
playName = dir_names[1]
name = playName
pic = paste(paste(picDir,name,sep = "/"), "jpg", sep = ".")
img = pic %>%
readImage() %>%
channel(mode = 'gray') %>%
imageData()
imgPlay = img
imageData = img
listOut = list(imageData[1:step,],imageData[,(ncol(imageData)-step+1):ncol(imageData)],imageData[(nrow(imageData)-step+1):nrow(imageData),],imageData[,1:step])
dim(imageData)
step = 5
thresholdSize = 70
thresholdPValue = 0.1
listOut = list(imageData[1:step,],imageData[,(ncol(imageData)-step+1):ncol(imageData)],imageData[(nrow(imageData)-step+1):nrow(imageData),],imageData[,1:step])
listOut = lapply(listOut,as.vector)
imageData[-1:step,]
imageData[,-(ncol(imageData)-step+1):ncol(imageData)]
imageData[-(nrow(imageData)-step+1):nrow(imageData),]
imageData[,-1:step]
PValue = rep(0,4)
imageData[-(1:step),]
listOut = list(imageData[1:step,],imageData[,(ncol(imageData)-step+1):ncol(imageData)],imageData[(nrow(imageData)-step+1):nrow(imageData),],imageData[,1:step])
listOut = lapply(listOut,as.vector)
Row = c(1, nrow(imageData))
Column = c(1, ncol(imageData))
R = c(6,nrow(imageData)-5)
C = c(6,ncol(imageData)-5)
listIn = list(imageData[R[1]:R[1]+step-1,],imageData[,C[2]-step+1:C[2]],imageData[R[2]-step+1:R[2],],imageData[,C[1]:C[1]+step-1])
C[2]
step
dim(imageData)
C[2] - step + 1
listIn = list(imageData[R[1]:R[1]+step-1,],imageData[,(C[2]-step+1):C[2]],imageData[R[2]-step+1:R[2],],imageData[,C[1]:C[1]+step-1])
listIn = list(imageData[R[1]:(R[1]+step-1),],imageData[,(C[2]-step+1):C[2]],imageData[(R[2]-step+1):R[2],],imageData[,C[1]:(C[1]+step-1)])
listIn = lapply(listIn,as.vector)
test = mapply(t.test, listOut, listIn)
test
length(listOut)
length(listIn)
display(imageData)
