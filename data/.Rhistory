if(min(dim(head))>size && c/r >= ratio && r/c >= ratio){
img = head %>%
resize(w=100, h=100)%>%
imageData()
img = (img - mean(img))
return(img)
}else{
return(NA)
}
}
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)%>%
na.omit()
str(abyssinian)
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)%>%
na.omit()
str(abyssinian)
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
str(abyssinian)
rescale = function(head,size,ratio){
c = ncol(head)
r = nrow(head)
if(min(dim(head))>size && c/r >= ratio && r/c >= ratio){
img = head %>%
resize(w=100, h=100)%>%
imageData()
img = (img - mean(img))
return(img)
}
}
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)%>%
na.omit()
str(abyssinian)
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)%>%
filter(!is.null())
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)%>%
filter(complete.cases(.))
abyssinian = abyssinian[!is.null(abyssinian)]
str(abyssinian)
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
abyssinian = abyssinian[!is.null(abyssinian)]
abyssinian = abyssinian[[!is.null(abyssinian)]]
str(abyssinian)
class(abyssinian[[1]])
abyssinian = abyssinian[!is.null(abyssinian)]
str(abyssinian)
str(abyssinian)
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
str(abyssinian)
abyssinian[[2]]
abyssinian[[2]]=NULL
str(abyssinian)
is.null(abyssinian)
abyssinian = abyssinian[lapply(is.null,abyssinian)]
?lapply
abyssinian = abyssinian[sapply(is.null,abyssinian)]
abyssinian = abyssinian[sapply(abyssinian,is.null)]
str(abyssinian)
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
abyssinian = abyssinian[sapply(abyssinian,!is.null)]
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
abyssinian = abyssinian[-sapply(abyssinian,is.null)]
str(abyssinian)
sapply(abyssinian,is.null)
str(abyssinian[1:5])
str(abyssinian[-3:90])
str(abyssinian[-(3:90)])
abyssinian = abyssinian[-(sapply(abyssinian,is.null))]
str(abyssinian)
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
sapply(abyssinian,is.null)
abyssinian[-(sapply(abyssinian,is.null))]
abyssinian = abyssinian[!(sapply(abyssinian,is.null))]
str(abyssinian)
play = meanFace(abyssinian,10)
display(play)
play = meanFace(abyssinian,30)
display(play)
play = meanFace(abyssinian,50)
display(play)
play = meanFace(abyssinian,20)
display(play)
play = meanFace(abyssinian,20)
display(play)
play = meanFace(abyssinian,20)
display(play)
str(play)
summary(play)
meanFace = function(faceList,n){
faceS = sample(faceList,n)
faceS = Reduce('+',faceS)/n
faceS = faceS - min(faceS)
return(faceS)
}
play = meanFace(abyssinian,20)
display(play)
play = meanFace(abyssinian,10)
display(play)
meanFace = function(faceList,n){
faceS = sample(faceList,n)
faceS = Reduce('+',faceS)/n
print(max(faceS),min(faceS),range(faceS))
#faceS = faceS - min(faceS)
return(faceS)
}
play = meanFace(abyssinian,10)
display(play)
play = meanFace(abyssinian,10)
play = ifelse(play>mean(play),1,0)
display(play)
play = meanFace(abyssinian,10)
play = ifelse(play>mean(play),0,1)
display(play)
play = meanFace(abyssinian,10)
play = ifelse(play>mean(play),0,1)
display(play)
play = meanFace(abyssinian,10)
play = ifelse(play>midean(play),0,1)
display(play)
?median
play = meanFace(abyssinian,10)
play = ifelse(play>median(play),0,1)
display(play)
play = meanFace(abyssinian,10)
play = ifelse(play>median(play),0,1)
display(play)
play = meanFace(abyssinian,10)
play = ifelse(play>median(play),0,1)
display(play)
play = meanFace(abyssinian,10)
play = ifelse(play>median(play),0,1)
display(play)
play = meanFace(abyssinian,10)
#play = ifelse(play>median(play),0,1)
display(play)
play = meanFace(abyssinian,5)
#play = ifelse(play>median(play),0,1)
display(play)
play = meanFace(abyssinian,5)
#play = ifelse(play>median(play),0,1)
display(play)
play = ifelse(abyssinian>median(abyssinian),0,1)
display(play)
play = meanFace(abyssinian,5)
play = ifelse(abyssinian[[1]]>median(abyssinian[[1]]),0,1)
#play = ifelse(play>median(play),0,1)
display(play)
length(abyssinian)
y = rep(c(0,1),each = 65)
y
matrix(1:4,2,2)
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
abstructPatch = function(pic,xmin,ymin,xmax,ymax){
pat = pic[xmin:xmax,ymin:ymax]
pat = ifelse(play>median(play),-1,1)
mat = matrix(c(xmin,ymin,xmax,ymax),2,2)
return(list(pat,mat))
}
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
abstractPatch = function(pic,xmin,ymin,xmax,ymax){
pat = pic[xmin:xmax,ymin:ymax]
pat = ifelse(play>median(play),-1,1)
mat = matrix(c(xmin,ymin,xmax,ymax),2,2)
return(list(pat,mat))
}
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
?lapply
fun = sapply(abyssinian,scorePatchList,patchList = play)
scorePatchList = function(pic,patchList){
return(sapply(patchList, pic = pic))
}
fun = sapply(abyssinian,scorePatchList,patchList = play)
scorePatchList = function(pic,patchList){
return(sapply(patchList, pic = pic))
}
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
patchList = play
pic = abyssinisn[[1]]
pic = abyssinian[[1]]
ohoh = sapply(patchList, pic = pic)
scorePatchList = function(pic,patchList){
return(sapply(patchList, scorePatch, pic = pic))
}
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
scorePatch = function(pic,patch){
mat = patch$mat
pat = patch$pat
xmin = mat[1,1]
ymin = mat[2,1]
xmax = mat[1,2]
ymax = mat[2,2]
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
a = matrix(c("xmin","ymin","xmax","ynax"),2,2)
a
abyssinian = breedList[[1]] %>%
lapply(FUN = readInHead, picDir = "../../Faces/Cat")%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
abyssinian = abyssinian[!(sapply(abyssinian,is.null))]
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
scorePatch = function(pic,patch){
#   mat = patch$mat
#   pat = patch$pat
#   xmin = mat[1,1]
#   ymin = mat[2,1]
#   xmax = mat[1,2]
#   ymax = mat[2,2]
pat = patch
xmin = 0
ymin = 0
xmax = 30
ymax = 30
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
abstractPatch = function(pic,xmin,ymin,xmax,ymax){
pat = pic[xmin:xmax,ymin:ymax]
pat = ifelse(play>median(play),-1,1)
mat = matrix(c(xmin,ymin,xmax,ymax),2,2)
#   return(list(pat,mat))
return(pat)
}
scorePatch = function(pic,patch){
#   mat = patch$mat
#   pat = patch$pat
#   xmin = mat[1,1]
#   ymin = mat[2,1]
#   xmax = mat[1,2]
#   ymax = mat[2,2]
pat = patch
xmin = 0
ymin = 0
xmax = 30
ymax = 30
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
abstractPatch = function(pic,xmin,ymin,xmax,ymax){
pat = pic[xmin:xmax,ymin:ymax]
pat = ifelse(pat>median(pat),-1,1)
mat = matrix(c(xmin,ymin,xmax,ymax),2,2)
return(list(pat,mat))
# return(pat)
}
play = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
scorePatch = function(pic,patch){
mat = patch$mat
pat = patch$pat
xmin = mat[1,1]
ymin = mat[2,1]
xmax = mat[1,2]
ymax = mat[2,2]
#   pat = patch
#   xmin = 0
#   ymin = 0
#   xmax = 30
#   ymax = 30
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
corePatch(abyssinian[[1]],play[[2]])
scorePatch(abyssinian[[1]],play[[2]])
scorePatch = function(pic,patch){
mat = patch$mat
pat = patch$pat
xmin = mat[1,1]
ymin = mat[2,1]
xmax = mat[1,2]
ymax = mat[2,2]
#   pat = patch
#   xmin = 0
#   ymin = 0
#   xmax = 30
#   ymax = 30
print(xmin,xmax,ymin,ymax)
print("hi")
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
scorePatch(abyssinian[[1]],play[[2]])
scorePatch = function(pic,patch){
mat = patch$mat
pat = patch$pat
xmin = mat[1,1]
ymin = mat[2,1]
xmax = mat[1,2]
ymax = mat[2,2]
#   pat = patch
#   xmin = 0
#   ymin = 0
#   xmax = 30
#   ymax = 30
print(xmin)
print("hi")
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
scorePatch(abyssinian[[1]],play[[2]])
scorePatch = function(pic,patch){
print(names(patch))
mat = patch$mat
pat = patch$pat
xmin = mat[1,1]
ymin = mat[2,1]
xmax = mat[1,2]
ymax = mat[2,2]
#   pat = patch
#   xmin = 0
#   ymin = 0
#   xmax = 30
#   ymax = 30
print(xmin)
print("hi")
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
scorePatch(abyssinian[[1]],play[[2]])
play[[1]]
names(play[[1]])
scorePatch = function(pic,patch){
mat = patch[[2]]
pat = patch[[1]]
xmin = mat[1,1]
ymin = mat[2,1]
xmax = mat[1,2]
ymax = mat[2,2]
#   pat = patch
#   xmin = 0
#   ymin = 0
#   xmax = 30
#   ymax = 30
print(xmin)
print("hi")
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
fun = sapply(abyssinian,FUN = scorePatchList,patchList = play)
str(fun)
y = rep(c(0,1),each = 65)
playCat = lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
funCat = sapply(abyssinian,FUN = scorePatchList,patchList = playCat)
?sample
dirCatFaces = "../../faces/cat"
dirCatFaceNames = list.files(dirCatFaces) %>%
sample(size = 100)
standardFace = function(fileNames,picDir){
faces = fileNames %>%
lapply(FUN = readInHead, picDir = picDir)%>%
lapply(FUN = rescale, size = 60, ratio = 0.9)
faces = faces[!(sapply(faces,is.null))]
return(faces)
}
dirCatFaces = "../../faces/cat"
CatPatchs = list.files(dirCatFaces) %>%
sample(size = 100) %>%
standardFace(picDir = dirCatFaces) %>%
lapply(abyssinian,abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
dirCatFaces = "../../faces/cat"
CatPatchs = list.files(dirCatFaces) %>%
sample(size = 100) %>%
standardFace(picDir = dirCatFaces) %>%
lapply(abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
length(CatPatchs)
dirCatFaces = "../../faces/cat"
catPatchs = list.files(dirCatFaces) %>%
sample(size = 100) %>%
standardFace(picDir = dirCatFaces) %>%
lapply(abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
dirCatFaces = "../../faces/cat"
dirDogFaces = "../../faces/dog"
catNames = list.files(dirCatFaces)
dogNames = list.files(dirDogFaces)
catTestList = sample(catNames,100)
catTestPic = lapply(FUN = readInHead, picDir = dirCatFaces)
catScores = sapply(catTestPic,FUN = scorePatchList,patchList = catPatchs)
catTestList = sample(catNames,100)
catTestPic = lapply(catTestList,FUN = readInHead, picDir = dirCatFaces)
catScores = sapply(catTestPic,FUN = scorePatchList,patchList = catPatchs)
dogTestList = sample(dogNames,100)
dogTestPic = lapply(dogTestList,FUN = readInHead, picDir = dirDogFaces)
dogScores = sapply(dogTestPic,FUN = scorePatchList,patchList = catPatchs)
dim(catScores)
catScores = t(catScores)
dogScores = t(dogScores)
scores = rbind(catScores,dogScores)
scores = rbind(catScores,dogScores)
dataTest = rbind(rep(c(0,1),each = 100),scores)
dim(scores)
length(rep(c(0,1),each = 100))
dataTest = cbind(rep(c(0,1),each = 100),scores)
??bagging
install.pagk
installed.packages("adabag")
install.packages("adabag")
library("adabag")
?bagging
dataTest = data.frame(group = rep(c(0,1),each = 100),scores)
play = bagging(group~. , dataTest)
names(play)
dim(dataTest)
scores = rbind(catScores,dogScores)
dataTest = data.frame(group = as.factor(rep(c(0,1),each = 100)),scores)
play = bagging(group~., dataTest)
plot(play(importanceplot()))
importanceplot(play)
dirCatFaces = "../../faces/cat"
dirDogFaces = "../../faces/dog"
catNames = list.files(dirCatFaces)
dogNames = list.files(dirDogFaces)
catPatchs = catNames %>%
sample(size = 1000) %>%
standardFace(picDir = dirCatFaces) %>%
lapply(abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
catTestList = sample(catNames,1000)
catTestPic = lapply(catTestList,FUN = readInHead, picDir = dirCatFaces)
catScores = t(sapply(catTestPic,FUN = scorePatchList,patchList = catPatchs))
scorePatch = function(pic,patch){
mat = patch[[2]]
pat = patch[[1]]
xmin = mat[1,1]
ymin = mat[2,1]
xmax = mat[1,2]
ymax = mat[2,2]
#   pat = patch
#   xmin = 0
#   ymin = 0
#   xmax = 30
#   ymax = 30
score = sum(pic[xmin:xmax,ymin:ymax]*pat)
return(score)
}
dirCatFaces = "../../faces/cat"
dirDogFaces = "../../faces/dog"
catNames = list.files(dirCatFaces)
dogNames = list.files(dirDogFaces)
catPatchs = catNames %>%
sample(size = 200) %>%
standardFace(picDir = dirCatFaces) %>%
lapply(abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
print("patch finished")
catTestList = sample(catNames,500)
catTestPic = lapply(catTestList,FUN = readInHead, picDir = dirCatFaces)
readInHead = function(name, picDir){
pic = paste(picDir,name,sep = "/")
img = readImage(pic)
return(img)
}
dirCatFaces = "../../faces/cat"
dirDogFaces = "../../faces/dog"
catNames = list.files(dirCatFaces)
dogNames = list.files(dirDogFaces)
catPatchs = catNames %>%
sample(size = 200) %>%
standardFace(picDir = dirCatFaces) %>%
lapply(abstractPatch, xmin = 0, ymin = 0, xmax = 30, ymax = 30)
print("patch finished")
catTestList = sample(catNames,500)
catTestPic = lapply(catTestList,FUN = readInHead, picDir = dirCatFaces)
catScores = t(sapply(catTestPic,FUN = scorePatchList,patchList = catPatchs))
print("cat score finished")
dogTestList = sample(dogNames,500)
dogTestPic = lapply(dogTestList,FUN = readInHead, picDir = dirDogFaces)
dogScores = t(sapply(dogTestPic,FUN = scorePatchList,patchList = catPatchs))
print("dogscore finished")
scores = rbind(catScores,dogScores)
dataTest = data.frame(group = as.factor(rep(c(0,1),each = 500)),scores)
play = bagging(group~., dataTest)
importanceplot(play)
plot(sort(play$importance))
dim(catScores)
cim(dogScores)
dim(dogScores)
dim(catPatchs)
length(catPatchs)
dogTestList = sample(dogNames,500)
dogTestPic = lapply(dogTestList,FUN = readInHead, picDir = dirDogFaces)
dogScores = t(sapply(dogTestPic,FUN = scorePatchList,patchList = catPatchs))
print("dogscore finished")
dim(dogScores)
